define service {
    name                            generic-service ; The name of this service template
    active_checks_enabled           1               ; Active checks are enabled
    passive_checks_enabled          1               ; Passive checks are enabled
    parallelize_check               1               ; Parallelize checks
    obsess_over_service             1               ; Use obsessive service checks
    check_freshness                 0               ; Don't check freshness (for active checks)
    notifications_enabled           1               ; Notifications are enabled
    event_handler_enabled           1               ; Event handlers are enabled
    flap_detection_enabled          1               ; Flap detection is enabled
    process_perf_data               1               ; Process performance data
    retain_status_information       1               ; Retain status information
    retain_nonstatus_information    1               ; Retain non-status information
    is_volatile                     0               ; Service is not volatile
    check_period                    24x7            ; Check service 24x7
    max_check_attempts              3               ; Try 3 times before changing state
    normal_check_interval           5               ; Check every 5 minutes
    retry_interval                  1               ; Retry every 1 minute
    notification_period             24x7            ; Send notifications 24x7
    notification_interval           60              ; Resend notifications every 60 minutes
    notification_options            w,u,c,r         ; Send notifications on WARNING, UNKNOWN, CRITICAL, RECOVERY states
    contact_groups                  admins          ; Default contact group for notifications
    register                        0               ; This is a template, not a real service
}

define service {
    use                             generic-service ; Inherit from the generic-service template
    host_name                       flask-app-ec2   ; The host this service belongs to
    service_description             HTTP Check - Flask App
    check_command                   check_http      ; Use the check_http command
}

define service {
    use                             generic-service
    host_name                       flask-app-ec2
    service_description             Docker Container Status - Flask App
    check_command                   check_docker_container!flask-app-devops ; Pass container name as argument
}

define service {
    use                             generic-service
    host_name                       jenkins-server-ec2
    service_description             Jenkins UI Check
    check_command                   check_http!-p 8080 ; Check HTTP on port 8080
}

define service {
    use                             generic-service
    host_name                       nagios-server-ec2
    service_description             Nagios UI Check
    check_command                   check_http
}
